class Snake
    private property body as Queue<Square>
    property head as Square
    property tail as Square 

    constructor Snake(int x, int y, Direction startingDirection)
        body = new Queue<Square>()
        var tail = new Square(x, y)
        body.Enqueue(tail);
        head = tail.getAdjacentSquare(startingDirection)
    end constructor

    function hasHitItself() as Bool -> bodyCovers(head)

    function bodyCovers(Square sq) as Bool -> body.Any(seg => seg.isSameSquareAs(sq))

    procedure advanceHeadOneSquare(d Direction)
        body.Enqueue(head)
        head = head.getAdjacentSquare(d)
    end procedure

    procedure advanceTailOneSquare()
        body.Dequeue()
    end procecdure

    function length() as Int -> body.Count
end class
